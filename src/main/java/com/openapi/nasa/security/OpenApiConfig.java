package com.openapi.nasa.security;

import io.swagger.v3.oas.annotations.OpenAPIDefinition;
import io.swagger.v3.oas.annotations.enums.SecuritySchemeIn;
import io.swagger.v3.oas.annotations.enums.SecuritySchemeType;
import io.swagger.v3.oas.annotations.info.Contact;
import io.swagger.v3.oas.annotations.info.Info;
import io.swagger.v3.oas.annotations.info.License;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.security.SecurityScheme;
import io.swagger.v3.oas.annotations.servers.Server;

/**
 * Configuration class for OpenAPI/Swagger documentation.
 * 
 * <p>This class uses annotations to define the structure and content of the API
 * documentation generated by SpringDoc OpenAPI. It provides metadata about the API,
 * server information, security requirements, and more.</p>
 * 
 * <p>The documentation is accessible through the Swagger UI at:</p>
 * <ul>
 *   <li>Local: http://localhost:5000/swaggerdoc.html</li>
 *   <li>Production: http://nasa-webapp-env.eba-bpm6gg2n.ap-south-1.elasticbeanstalk.com/swaggerdoc.html</li>
 * </ul>
 * 
 * <p>Key components defined in this configuration:</p>
 * <ul>
 *   <li>API information (title, description, version)</li>
 *   <li>Contact information for the API maintainer</li>
 *   <li>License information</li>
 *   <li>Server environments (local and production)</li>
 *   <li>Security schemes (JWT Bearer authentication)</li>
 * </ul>
 * 
 * <p>This configuration helps developers understand and interact with the API
 * through the Swagger UI, which provides both documentation and a testing interface.</p>
 */
@OpenAPIDefinition(
        info = @Info(
                title = "OpenApi Specification- Nasa Api Implementation",
                description = "OpenApi Documentation For Nasa's Astronomy Picture Of The Day And Nasa's Mars Rover Photos",
                termsOfService = "Terms Of Service",
                contact = @Contact(
                        name = "Varun G R",
                        email = "varungrvv@gmail.com",
                        url = "http://nasa-webapp-env.eba-bpm6gg2n.ap-south-1.elasticbeanstalk.com/nasa/home-page"
                ),
                license = @License(
                        name = "Nasa Api",
                        url = "https://api.nasa.gov/"
                ),
                version = "1.0"
        ),
        servers = {
                @Server(
                        description = "Local ENV",
                        url = "http://localhost:5000"
                ),
                @Server(
                        description = "Prod ENV",
                        url = "http://nasa-webapp-env.eba-bpm6gg2n.ap-south-1.elasticbeanstalk.com"
                )
        },
        security = {
                @SecurityRequirement(
                        name = "bearerAuth "
                )
        }
)
@SecurityScheme(
        name = "bearerAuth",
        description = "JWT auth",
        scheme = "bearer",
        type = SecuritySchemeType.HTTP,
        bearerFormat = "JWT",
        in = SecuritySchemeIn.HEADER
)
public class OpenApiConfig {
    /**
     * This is a configuration class only, with no implementation needed.
     * 
     * <p>The class uses annotations to configure the OpenAPI documentation
     * without requiring any Java code or bean definitions. The SpringDoc library
     * processes these annotations to generate the API documentation.</p>
     * 
     * <p>The @OpenAPIDefinition annotation provides the overall API metadata,
     * including information about the API, servers, and security requirements.</p>
     * 
     * <p>The @SecurityScheme annotation defines the JWT Bearer authentication
     * scheme used by the API, which is referenced in the security section of
     * the @OpenAPIDefinition.</p>
     */
    
    // TODO: Student task - Add API tags for better endpoint organization
    // TODO: Student task - Implement response examples for common API responses
}